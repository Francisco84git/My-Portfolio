---
const TAGS = [
  {
    name: 'Typescript',
    text: 'text-[#3178C6]', // Azul oficial de TypeScript
  },
  {
    name: 'Astro',
    text: 'text-[#FF5D01]', // Naranja caracter√≠stico de Astro
  },
  {
    name: 'PHP',
    text: 'text-[#4F5D95]', // Azul oscuro oficial de PHP
  },
  {
    name: 'HTML',
    text: 'text-[#E34F26]', // Naranja oficial de HTML
  },
  {
    name: 'CSS',
    text: 'text-[#1572B6]', // Azul oficial de CSS
  },
  {
    name: 'Javascript',
    text: 'text-[#FFB81C]', // Amarillo oficial de JS
  },
];

interface Props {
    image: string;
    tags: string[];
    title: string;
    description: string;
    url: string;
}

const { image, tags, title, description, url } = Astro.props;
---

<a href={url} target="_blank" class="block rounded-2xl p-6 bg-gray-50 transition-all ring-1 ring-gray-200/50 shadow hover:shadow-lg gap-1">
    <div class="overflow-hidden flex items-start justify-center h-auto lg:h-60">
        <img class="rounded-md" src=`/projects/${image}` alt={title}>
    </div>
    <div class="mt-8">
        <div class="flex flex-wrap">
          {    
            tags.map(tag => {
                const {name, text} = TAGS.find(t => t.name === tag) || {};
                return (
                    <span class={`${text} text-xs me-2 py-0.5 font-bold`}>{name?.toUpperCase()}</span>
                )
            })
          }
        </div>
        <h3 class="text-xl lg:text-2xl font-medium mt-2"><span>{title}</span></h3>
        <p class="text-slate-600 mt-2 [text-wrap:balance]">
            <span>{description}</span>
        </p>
    </div>
</a>